import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { ProductService, Product } from './services/product.service';
import { Observable } from 'rxjs';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [CommonModule, FormsModule],
  template: `
    <div style="max-width: 600px; margin: auto; padding: 20px; text-align: center;">
      <h1>🛍 معرض المنتجات</h1>

      <!-- نموذج إدخال/تعديل منتج -->
      <div style="margin-bottom: 30px; border: 1px solid #ccc; padding: 20px; border-radius: 8px;">
        <h3>{{ editMode ? 'تعديل المنتج' : 'إضافة منتج جديد' }}</h3>
        <input type="file" (change)="onImageSelect($event)" accept="image/*"><br><br>
        <input type="text" placeholder="اسم المنتج" [(ngModel)]="newProduct.name"><br><br>
        <input type="text" placeholder="الوصف" [(ngModel)]="newProduct.description"><br><br>
        <input type="number" placeholder="السعر" [(ngModel)]="newProduct.price"><br><br>
        <button *ngIf="!editMode" (click)="addProduct()">➕ إضافة المنتج</button>
        <button *ngIf="editMode" (click)="updateProduct()">💾 حفظ التعديلات</button>
        <button *ngIf="editMode" (click)="cancelEdit()" style="margin-left: 10px; background-color: #ccc; color: black; border: none; padding: 8px 12px; border-radius: 4px;">
          ❌ إلغاء
        </button>
      </div>

      <!-- عرض المنتجات -->
      <div *ngFor="let product of products$ | async; let i = index" style="margin-bottom: 40px; border-bottom: 1px dashed #aaa; padding-bottom: 20px;">
        <div (click)="openProductDetails(product)" style="cursor: pointer;">
          <img [src]="product.image" alt="صورة المنتج" style="width: 200px; border-radius: 8px;">
          <h3>{{ product.name }}</h3>
        </div>
        <p>{{ product.description }}</p>
        <p>💵 السعر: {{ product.price }} ل.س</p>
        <button (click)="editProduct(i)" style="background-color: #4CAF50; color: white; border: none; padding: 8px 12px; border-radius: 4px; margin-right: 10px;">
          ✏️ تعديل
        </button>
        <button (click)="deleteProduct(i)" style="background-color: #f44336; color: white; border: none; padding: 8px 12px; border-radius: 4px;">
          🗑 حذف
        </button>
      </div>
    </div>
  `,
})
export class AppComponent implements OnInit {
  products$: Observable<Product[]>;
  newProduct: Product = {
    name: '',
    description: '',
    price: null,
    image: '',
  };
  editMode: boolean = false;
  editIndex: number | null = null;

  constructor(private productService: ProductService) {
    this.products$ = this.productService.products$;
  }

  ngOnInit() {}

  onImageSelect(event: Event) {
    const input = event.target as HTMLInputElement;
    if (input.files && input.files[0]) {
      const reader = new FileReader();
      reader.onload = () => {
        this.newProduct.image = reader.result as string;
      };
      reader.readAsDataURL(input.files[0]);
    }
  }

  addProduct() {
    const { name, description, price, image } = this.newProduct;
    if (name && description && price && image) {
      this.productService.addProduct({ ...this.newProduct });
      this.resetForm();
    } else {
      alert('⚠️ الرجاء إدخال جميع البيانات قبل الإضافة.');
    }
  }

  editProduct(index: number) {
    const products = this.productService.getProducts();
    this.newProduct = { ...products[index] };
    this.editMode = true;
    this.editIndex = index;
  }

  updateProduct() {
    const { name, description, price, image } = this.newProduct;
    if (name && description && price && image && this.editIndex !== null) {
      this.productService.updateProduct(this.editIndex, { ...this.newProduct });
      this.resetForm();
    } else {
      alert('⚠️ الرجاء إدخال جميع البيانات قبل الحفظ.');
    }
  }

  cancelEdit() {
    this.resetForm();
  }

  deleteProduct(index: number) {
    this.productService.deleteProduct(index);
  }
  openProductDetails(product: Product) {
      const html = `
        <html>
          <head>
            <title>${product.name}</title>
            <style>
              body { font-family: Arial; text-align: center; padding: 20px; }
              img { width: 300px; border-radius: 8px; margin-bottom: 20px; }
            </style>
          </head>
          <body>
            <h1>${product.name}</h1>
            <img src="${product.image}" alt="صورة المنتج">
            <p>${product.description}</p>
            <p><strong>السعر:</strong> ${product.price} ل.س</p>
          </body>
        </html>
      `;
      const detailWindow = window.open('', '_blank');
      detailWindow!.document.write(html);
      detailWindow!.document.close();
    }

    private resetForm() {
      this.newProduct = {
        name: '',
        description: '',
        price: null,
        image: '',
      };
      this.editMode = false;
      this.editIndex = null;
    }
  }